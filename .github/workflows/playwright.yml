name: Playwright Tests
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV

      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - run: bun install --frozen-lockfile
      - run: bunx playwright install --with-deps
        # if: steps.playwright-cache.outputs.cache-hit != 'true'
      - run: bunx playwright install-deps
        # if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: 'Create env file'
        run: |
          touch .env
          echo ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }} >> .env
          echo ACCOUNT_NAME=${{ secrets.ACCOUNT_NAME }} >> .env
          echo REPO_NAME=${{ secrets.REPO_NAME }} >> .env
          echo SESSION_SECRET=${{ secrets.SESSION_SECRET }} >> .env
          echo UPSTASH_REDIS_REST_URL=${{ secrets.UPSTASH_REDIS_REST_URL }} >> .env
          echo UPSTASH_REDIS_REST_TOKEN=${{ secrets.UPSTASH_REDIS_REST_TOKEN }} >> .env

      - name: Run Playwright tests
        run: bunx playwright test
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-test-results
          path: test-results/
          retention-days: 30
